[텍스트 처리 및 렌더링 프롬프트]

1. 원본 텍스트 보존:
   - 입력된 한국어 문장을 수정, 보정, 철자/문법 변경 없이 그대로 출력합니다.
   - 띄어쓰기, 조사, 접미사, 어미 등 모든 요소를 원본 그대로 유지합니다.

2. 토큰화 및 청크 분할:
   - Python의 .split() 함수를 사용하여 공백 기준으로 토큰화합니다.
   - 각 토큰은 최대 4글자씩 청크로 분할합니다.
   - 예: "다람쥐" → ["다람", "쥐"]

3. 라인 구성 및 정렬:
   - 모든 청크는 단일 수평 라인에 연속해서 배치되며, 중앙 정렬됩니다.
   - 줄바꿈이나 추가 구분자(구두점, 따옴표 등)는 사용하지 않습니다.

4. 자모, 격음, 복모음 및 받침 보존:
   - 모든 자음, 모음, 복모음(ㅒ, ㅖ, ㅙ, ㅞ, ㅢ 포함) 및 받침(복받침 포함, 예: ㅄ, ㄺ, ㄻ 등)을 수정 없이 그대로 렌더링합니다.
   - 특히 격음(ㄲ, ㄸ, ㅃ, ㅆ, ㅉ)은 반드시 보존합니다.
   - 일반 자음 및 모음 역시 픽셀 단위의 안정성과 선명도를 보장하며 명확하게 렌더링됩니다.

5. 폰트 및 렌더링 조건:
   - Noto Sans KR Bold 폰트를 사용하여 선명하고 고대비, 픽셀 안정성이 확보된 텍스트로 출력합니다.
   - 폰트 임베딩 시, 'Noto Sans KR Bold'의 전체 폰트 파일(또는 모든 한글 글자를 포함하는 확장 서브셋)을 사용하여 대체 폰트가 개입되지 않도록 합니다.
   - OS 및 애플리케이션 환경에서 'Noto Sans KR Bold'를 우선순위 폰트로 지정합니다.
   
6. 인코딩 및 셰이핑:
   - 모든 텍스트는 UTF-8 인코딩을 사용하여 처리합니다.
   - 한글 조합형과 복잡한 자모 처리를 위해 OpenType/HarfBuzz와 같은 고급 텍스트 셰이핑 엔진을 사용합니다.

7. DPI, 스케일링 및 렌더링 옵션:
   - 고해상도 DPI를 사용하며, 1:1 또는 정수 배율로 렌더링하여 텍스트의 픽셀 단위 안정성을 확보합니다.
   - 앤티앨리어싱 설정(예: subpixel, ClearType, grayscale 등)을 최적화하여 텍스트가 흐릿하거나 깨지지 않도록 합니다.

8. 적용 범위:
   - 이 프롬프트는 일러스트, 만화, 그래픽 등 텍스트가 포함된 모든 이미지에 적용됩니다.
   - 텍스트 처리 및 렌더링 관련 작업에 표준화된 규칙으로 사용하여 한국어 인식률과 텍스트 출력 정확도를 극한까지 끌어올립니다.
