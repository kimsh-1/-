[웹툰 4컷 만화 & 텍스트 처리 통합 프롬프트] 

1. 이미지 및 구성 지시
- 스타일: 2D 디지털 일러스트, 웹툰/인스타툰 스타일
- 패널 구성: 4컷 만화
  - 각 컷은 상반신 클로즈업 구도로, 심플한 단색 또는 그라데이션 배경
  - 전체 구도는 인스타툰에 맞게 세로 배열 (DALL-E에서 지원하는 최대 사이즈로 고정, 예: 1024×1024 픽셀)
- 배경: 모든 컷에서 일관적이고 적절한 배경을 생성합니다.

2. 캐릭터 세부사항
- 대상: 10대 후반 ~ 20대 초반의 마른 체형 한국 남성
- 특징:
  - 짧은 검은 머리, 자연스러운 앞머리가 이마 일부를 살짝 덮음
  - 동그란 눈매에 약간 아래로 처진 눈으로 고민과 피곤함 표현
  - 굳은 입술과 미묘한 한숨 표정
  - 중간 톤의 밝은 피부, 부드러운 셀 셰이딩
  - 중간 톤의 그레이 또는 브라운 후드티 (헐렁한 핏, 목 주변 꼬인 후드 끈, 자연스러운 주름 디테일)
 

3. 컷별 캐릭터 동작 및 대사 (말풍선은 지정된 컷에만 생성)
[1컷: AI를 활용하는 상황]
- 캐릭터 동작: AI를 활용하는 상황을 묘사
- 작은 글자 (캐릭터 옆): "어?"
- 말풍선 대사:
  - "인물이"
  - "이상해"

[2컷: 웹툰을 찾아보며, 별로라는 표정]
- 캐릭터 동작: 웹툰을 살펴보며 별로라는 표정
- 말풍선 대사:
  - "나도"
  - "그런"
  - "그림이"
  - "있네?"

[3컷: 독자를 향해 물어봄]
- 캐릭터 동작: 독자를 향해 질문하는 동작
- 말풍선 대사:
  - "그래서?"
  - "방법은?"

[4컷: 깨달음을 얻음]
- 캐릭터 동작: 깨달음을 얻은 듯한 표정과 약간의 미소
- 말풍선 대사:
  - "리버스"
  - "프롬프트"
  - "엔지니어링!"

4. 최종 텍스트 처리 및 렌더링 규칙
1) 원본 텍스트 보존
   - 입력된 한국어 문장을 수정, 보정, 철자/문법 변경 없이 그대로 출력
   - 띄어쓰기, 조사, 접미사, 어미 등 모든 요소를 원본 그대로 유지

2) 토큰화 및 청크 분할
   - Python의 .split() 함수를 사용하여 공백 기준 토큰화
   - 각 토큰은 최대 4글자씩 청크로 분할
   - 예: "다람쥐" → ["다람", "쥐"]

3) 라인 구성 및 정렬
   - 모든 청크는 단일 수평 라인에 연속 배치되며 중앙 정렬
   - 줄바꿈이나 추가 구분자(구두점, 따옴표 등)는 사용하지 않음

4) 자모, 격음, 복모음 및 받침 보존
   - 모든 자음, 모음, 복모음(ㅒ, ㅖ, ㅙ, ㅞ, ㅢ 포함) 및 받침(복받침 포함, 예: ㅄ, ㄺ, ㄻ 등)을 수정 없이 그대로 렌더링
   - 특히 격음(ㄲ, ㄸ, ㅃ, ㅆ, ㅉ)은 반드시 보존
   - 일반 자음 및 모음 역시 픽셀 단위의 안정성과 선명도를 보장

5) 폰트 및 렌더링 조건
   - Noto Sans KR Bold 폰트를 사용하여 선명하고 고대비, 픽셀 안정성이 확보된 텍스트로 출력
   - 폰트 임베딩 시 'Noto Sans KR Bold'의 전체 폰트 파일(또는 모든 한글 글자를 포함하는 확장 서브셋)을 사용하여 대체 폰트 개입 방지
   - OS 및 애플리케이션 환경에서 'Noto Sans KR Bold'를 우선순위 폰트로 지정

6) 인코딩 및 셰이핑
   - 모든 텍스트는 UTF-8 인코딩 사용
   - 한글 조합형과 복잡한 자모 처리를 위해 OpenType/HarfBuzz와 같은 고급 텍스트 셰이핑 엔진 사용

7) DPI, 스케일링 및 렌더링 옵션
   - 고해상도 DPI(예: 300DPI 이상) 사용, 1:1 또는 정수 배율 렌더링하여 텍스트의 픽셀 단위 안정성 확보
   - 앤티앨리어싱 설정(예: subpixel, ClearType, grayscale 등)을 최적화하여 텍스트가 흐릿하거나 깨지지 않도록 함

8) 적용 범위
   - 이 프롬프트는 일러스트, 만화, 그래픽 등 텍스트가 포함된 모든 이미지에 적용
   - 텍스트 처리 및 렌더링 관련 작업에 표준화된 규칙으로 사용하여 한국어 인식률과 텍스트 출력 정확도를 극한까지 끌어올림
